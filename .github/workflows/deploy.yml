name: CI/CD Pipeline for Docker and EC2 Deployment

on:
  push:
    branches:
      - main  

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build the Docker image and tag it
      - name: Build Docker image
        run: |
          docker build -t charlesngugi023/devops-fe:${{ github.sha }} .

      # Step 5: Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push charlesngugi023/devops-fe:${{ github.sha }}

      # Step 6: Terraform - Check if EC2 Exists
      - name: Check if EC2 exists
        run: |
          # Configure AWS CLI with region and credentials (hardcoded region)
          aws configure set region af-south-1
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          # Check EC2 instance status
          instance_status=$(aws ec2 describe-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }} --query "Reservations[0].Instances[0].State.Name" --output text)
          
          if [ "$instance_status" == "running" ]; then
            echo "EC2 instance is already running, skipping provisioning."
          else
            echo "EC2 instance not found or not running, provisioning..."
            terraform init
            terraform apply -auto-approve
          fi  # <-- Added fi to close the if condition

      # Step 7: SSH into EC2 and deploy the container
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull charlesngugi023/devops-fe:${{ github.sha }}
            docker rm devops-fe
            docker run -d --name devops-fe -p 80:80 charlesngugi023/devops-fe:${{ github.sha }}
